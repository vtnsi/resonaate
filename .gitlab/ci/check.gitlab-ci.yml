# ==========================================
# Includes
# ==========================================

include:
  - local: .gitlab/ci/base.gitlab-ci.yml
  - local: .gitlab/ci/rules.gitlab-ci.yml
  - local: .gitlab/ci/scripts.gitlab-ci.yml

# ==========================================
# Base Check Job
# ==========================================

.check-base:
  stage: check
  extends:
    - .python39
    - .rules:default
  before_script:
    - !reference [.pip-dev, before_script]
  variables:
    # Source files & directories to lint
    LINT_SOURCES: "*.py tests src docs"
  artifacts:
    when: on_failure
    expire_in: 3 days
  needs: []

# ==========================================
# `pylint` Job
# ==========================================
# Lint source code with pylint

pylint:
  extends: .check-base
  before_script:
    # [NOTE]: pylint requires the package be installed
    - !reference [.pip-dev, before_script]
    - echo -e "\e[0Ksection_start:`date +%s`:pip_test[collapsed=true]\r\e[0K Install resonaate & test dependencies via pip"
    - python3 -m pip install .[test]
    - echo -e "\e[0Ksection_end:`date +%s`:pip_test\r\e[0K"
  script:
    - echo "Linting with pylint"
    - pylint *.py src docs | tee pylint.log
    - pylint tests --disable=invalid-name | tee -a pylint.log
  artifacts:
    name: pylint
    paths:
      - pylint.log
    expose_as: "pylint log"

# ==========================================
# `flake8` Job
# ==========================================
# Lint source code with flake8

flake8:
  extends: .check-base
  script:
    - echo "Linting with flake8"
    - flake8 $LINT_SOURCES | tee flake8.log
  artifacts:
    name: flake8
    paths:
      - flake8.log
    expose_as: "flake8 log"

# ==========================================
# `check-manifest` job
# ==========================================
# Check Manifest.in for sdist package data

manifest:
  extends: .check-base
  script:
    - echo "Checking sdist files with check-manifest"
    - check-manifest -v | tee manifest.log
  artifacts:
    name: manifest
    paths:
      - manifest.log
    expose_as: "manifest log"
