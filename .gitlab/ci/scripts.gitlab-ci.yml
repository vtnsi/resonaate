# ==========================================
# Common Scripts
# ==========================================

# Get `resonaate` version
# [NOTE]: requires RESONAATE to be installed!
.get-version:
  script:
    - RESONAATE_VERSION=$(python -c "import resonaate; print(resonaate.__version__)")
    - echo RESONAATE_VERSION="${RESONAATE_VERSION}" >> $CI_PROJECT_DIR/variables.env

# ==========================================
# `pip` Install Scripts
# ==========================================

# Create virtual environment in '.venv' using `virtualenv`
.create-venv:
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:venv[collapsed=true]\r\e[0K Create venv, install dependencies"
    - python3 -V
    - python3 -m pip install --upgrade pip
    - python3 -m venv .venv
    - source .venv/bin/activate
    - echo -e "\e[0Ksection_end:`date +%s`:venv\r\e[0K"

# `pip install` RESONAATE only
.pip-base:
  before_script:
    - !reference [.create-venv, before_script]
    - echo -e "\e[0Ksection_start:`date +%s`:pip_base[collapsed=true]\r\e[0K Install resonaate via pip"
    - python3 -m pip install .
    - echo -e "\e[0Ksection_end:`date +%s`:pip_base\r\e[0K"

# `pip install` development tools
.pip-dev:
  before_script:
    - !reference [.create-venv, before_script]
    - echo -e "\e[0Ksection_start:`date +%s`:pip_dev[collapsed=true]\r\e[0K Install resonaate & dev dependencies via pip"
    - python3 -m pip install .[dev]
    - echo -e "\e[0Ksection_end:`date +%s`:pip_dev\r\e[0K"

# `pip install` documentation tools
.pip-doc:
  before_script:
    - !reference [.create-venv, before_script]
    - echo -e "\e[0Ksection_start:`date +%s`:pip_doc[collapsed=true]\r\e[0K Install resonaate & doc dependencies via pip"
    - python3 -m pip install .[doc]
    - echo -e "\e[0Ksection_end:`date +%s`:pip_doc\r\e[0K"

# `pip install` testing tools
# [NOTE]: This has to be an editable install for coverage to work!
.pip-test:
  before_script:
    - !reference [.create-venv, before_script]
    - echo -e "\e[0Ksection_start:`date +%s`:pip_test[collapsed=true]\r\e[0K Install resonaate & test dependencies via pip"
    - python3 -m pip install .[test]
    - echo -e "\e[0Ksection_end:`date +%s`:pip_test\r\e[0K"

# ==========================================
# `apt` Install Scripts
# ==========================================

# Update `apt` repositories
.apt-update:
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:apt_update[collapsed=true]\r\e[0K Update apt packages"
    - apt-get update -qq
    - echo -e "\e[0Ksection_end:`date +%s`:apt_update\r\e[0K"

# Install `curl` to image using `apt`
.install-curl:
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install_curl[collapsed=true]\r\e[0K Install curl"
    - apt-get install -y -qq curl
    - echo -e "\e[0Ksection_end:`date +%s`:install_curl\r\e[0K"

# Install `git` to image using `apt`
.install-git:
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install_git[collapsed=true]\r\e[0K Install git "
    - apt-get -y -qq install git
    - echo -e "\e[0Ksection_end:`date +%s`:install_git\r\e[0K"

# Install `buildah` to image using `apt`
.install-buildah:
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:install_buildah[collapsed=true]\r\e[0K Install buildah "
    - apt-get -y -qq install buildah
    - echo -e "\e[0Ksection_end:`date +%s`:install_buildah\r\e[0K"
