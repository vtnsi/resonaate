# ==========================================
# Includes
# ==========================================

include:
  - local: .gitlab/ci/base.gitlab-ci.yml
  - local: .gitlab/ci/rules.gitlab-ci.yml
  - local: .gitlab/ci/scripts.gitlab-ci.yml

# ==========================================
# Base Test Job
# ==========================================

.test-base:
  stage: test
  extends:
    - .python-latest
    - .rules:default
  variables:
    PYTEST_OPTIONS: "-ra -v --durations=5"
  before_script:
    - !reference [.pip-test, before_script]
  artifacts:
    when: always
    expire_in: 1 hour
  when: always
  needs: []

# ==========================================
# Unit Test Job
# ==========================================

pytest-unit:
  extends: .test-base
  variables:
  script:
    - echo "Running unit tests with pytest"
    - pytest -m "not (scenario or event)" $PYTEST_OPTIONS

# ==========================================
# Scenario Test Job
# ==========================================

pytest-scenario:
  extends: .test-base
  script:
    - echo "Running scenario tests with pytest"
    - pytest -m scenario $PYTEST_OPTIONS

# ==========================================
# Event Test Job
# ==========================================

pytest-event:
  extends: .test-base
  variables:
  script:
    - echo "Running event tests with pytest"
    - pytest -m event $PYTEST_OPTIONS

# ==========================================
# Coverage Job
# ==========================================

coverage:
  extends: .test-base
  before_script:
    - !reference [.pip-test, before_script]
  script:
    - echo "Calculating unit test coverage"
    - pytest --cov --cov-report=html --cov-report=xml --cov-report=term:skip-covered --cov-context=test -m "not (event or scenario)"
  artifacts:
    name: coverage
    paths:
      - coverage/
    expose_as: Coverage
    expire_in: 1 week
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  coverage: /TOTAL.*\s+(\d+.\d+\%)/
