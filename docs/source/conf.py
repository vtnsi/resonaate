# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# pylint: disable=invalid-name, redefined-builtin

# -- Path setup --------------------------------------------------------------

# Standard Library Imports
# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys

sys.path.insert(0, os.path.abspath("../../"))

# Checking the import state for importlib.metadata.version method
try:
    # For 3.10 or later
    # Standard Library Imports
    from importlib.metadata import version
except ImportError:
    # For 3.9 and earlier
    # Third Party Imports
    from importlib_metadata import version

# -- Project information -----------------------------------------------------

project = "RESONAATE"
copyright = "2018-2022, Virginia Tech"  # noqa: A001
author = "Dylan Thomas, David Kusterer, Jon Kadan, Cameron Harris"

project_ver = version(project)
# The short X.Y version
version = ".".join(project_ver.split(".")[:2])
# The full version, including alpha/beta/rc tags
release = project_ver

# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # Included extensions
    "sphinx.ext.napoleon",
    "sphinx.ext.autodoc",
    "sphinx.ext.autosummary",
    "sphinx.ext.duration",
    "sphinx.ext.todo",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinx.ext.coverage",
    # MyST Markdown Parser
    "myst_parser",
    # External extensions
    "sphinx_copybutton",
    "sphinxcontrib.bibtex",
    "sphinxcontrib.mermaid",
    "sphinx_gallery.gen_gallery",
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
source_suffix = {
    ".rst": "restructuredtext",
    ".md": "markdown",
    ".txt": "markdown",
}

# The master toctree document.
master_doc = "index"

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
add_module_names = False

# A list of prefixes that are ignored for sorting the Python module index
# (e.g., if this is set to ['foo.'], then foo.bar is shown under B, not F).
# This can be handy if you document a project that consists of a single
# package. Works only for the HTML builder currently. Default is [].
modindex_common_prefix = ["resonaate."]

# Auto-numbers all figures, tables, & code-blocks if they are captioned.
# Enables the {numref} role, which makes referencing them in text easier.
numfig = True


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
html_theme_options = {
    "logo_only": False,
    "display_version": True,
    "prev_next_buttons_location": "bottom",
    "style_external_links": True,
    # Toc options
    "collapse_navigation": False,
    "sticky_navigation": True,
    "navigation_depth": 5,
    "includehidden": True,
    "titles_only": False,
}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}

# Remove "Built with..."
html_show_sphinx = False


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = "Resonaatedoc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': r'''
    # % make phantomsection empty inside figures
    # \usepackage{etoolbox}
    # \AtBeginEnvironment{figure}{\renewcommand{\phantomsection}{}}
    # '''
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, "Resonaate.tex", "Resonaate Documentation", author, "manual"),
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "resonaate", "Resonaate Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (
        master_doc,
        "Resonaate",
        "Resonaate Documentation",
        author,
        "Resonaate",
        "One line description of project.",
        "Miscellaneous",
    ),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ["search.html"]


# -- Extension configuration -------------------------------------------------

autosummary_generate = True

autodoc_class_signature = "separated"
autoclass_content = "class"
autodoc_default_options = {
    "show-inheritance": True,
    "member-order": "groupwise",
}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True

# -- Options for napoleon extension ------------------------------------------
napoleon_google_docstring = True
napoleon_numpy_docstring = False
napoleon_include_init_with_doc = True
napoleon_include_private_with_doc = True
napoleon_include_special_with_doc = False
napoleon_use_admonition_for_examples = False
napoleon_use_admonition_for_notes = False
napoleon_use_admonition_for_references = True
napoleon_use_ivar = True
napoleon_use_param = True
napoleon_use_rtype = False
napoleon_preprocess_types = True
napoleon_attr_annotations = True

# -- Options for BibTeX extension --------------------------------------------
# Tell where LaTeX bib file is located
bibtex_bibfiles = ["meta/resonaate.bib"]

bibtex_default_style = "plain"
bibtex_reference_style = "author_year"

# Changes BibTeX headers in Sphinx docs
# bibtex_bibliography_header = ".. rubric:: References"
# bibtex_footbibliography_header = bibtex_bibliography_header

# -- Options for MyST Parser -------------------------------------------------
myst_enable_extensions = [
    # Allow $ or $$ encapsulated math & native LaTeX math environments
    "amsmath",
    "dollarmath",
    # Typography improvements
    "replacements",
    "smartquotes",
    # Allow Jinja2 substitutions
    "substitution",
    # Standard Markdown-friendly directive syntax
    "colon_fence",
    # Include task list formatting
    "tasklist",
]

# Allow header slugs to be referenced
myst_heading_anchors = 3

# -- Options for Sphinx Gallery ----------------------------------------------

sphinx_gallery_conf = {
    "examples_dirs": "./examples",  # path to your example scripts
    "gallery_dirs": "./gen/examples",  # path to where to save gallery generated output
    "show_signature": False,  # don't show "Generated by ..." notice on examples
    "reset_modules_order": "both",  # call resetting functions before & after each example
    "reset_modules": (  # functions to call to reset modules
        "matplotlib",  # resets matplotlib settings
        "seaborn",  # resets seaborn settings
    ),
}
