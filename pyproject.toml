[build-system]
requires = [
    "setuptools>=42",
    "wheel>=0.29.0",
]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
# Nice summary at end, & make output "quiet"
addopts = "-ra -q"
testpaths = [
    "tests",
]

[tool.black]
# Line length recommendation
line-length = 99
# Python versions to target
target-version = [
    "py37",
    "py38",
    "py39",
]

[tool.isort]
# Play nicely with black
profile = "black"
# Specific directory includes
src_paths = [
    "src",
    "tests",
    "docs",
    "setup.py",
]
# Add to skip list
extend_skip = [
    ".dat",
    ".md",
    ".json",
    ".rst",
    ".txt",
    ".yaml",
    ".yml",
    "coverage*",
    ".gitlab/",
    ".vscode/",
    ".mypy_cache/",
    ".pytest_cache/",
    "__pycache__/",
    ".coverage*",
    "configs/",
    "coverage/",
    "db/",
    "debugging/",
    "plots/",
    "build/",
    "dist/",
    "docs/build/",
    "docs/source/gen/",
]
# Use .gitingore to skip files
skip_gitignore = true
# git_ignore = true
# Line length rules
line_length = 99
# Enforce Unix line endings
line_ending = "\n"
# Whitelist first party imports
known_first_party = [
    "resonaate",
    "respect",
]
# Import headers
import_heading_stdlib = "Standard Library Imports"
import_heading_thirdparty = "Third Party Imports"
import_heading_firstparty = "RESONAATE Imports"
import_heading_localfolder = "Local Imports"

[tool.coverage.paths]
# Required for proper coverage testing across multiple jobs
source = [
    "src",
    "**/site-packages",
]

[tool.coverage.run]
source = [
    "resonaate",
]
parallel = true
omit = [
    "tests/**",
    "docs/**",
]
concurrency = [
    "thread",
    "multiprocessing",
]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma:
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "except KeyboardInterrupt",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",

    # Don't complain for type-checking guard:
    "if TYPE_CHECKING:",
]

precision = 2

[tool.coverage.html]
directory = "coverage"
show_contexts = true
