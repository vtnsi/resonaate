[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "resonaate"
version = "3.0.0"
description = "The Responsive Space Observation Analysis and Autonomous Tasking Engine (RESONAATE)"
dynamic = ["readme"]
dependencies = [
    "numpy>=1.19",
    "scipy>=1.6",
    "sqlalchemy>=1.3",
    "matplotlib>=3.3",
    "mjolnir>=1.3.2",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    # Linting
    "ruff==0.2.2",
    "pylint==3.0.4",
    # Type Checking
    "mypy==1.8.0",
    "types-sqlalchemy==1.4.53.38",
    "typing_extensions==4.1.1; python_version < '3.10'",
    # Formatters
    "black==24.2.0",
    "isort[colors]==5.13.2",
    "mdformat==0.7.17",
    "mdformat-myst==0.1.5",
    "mdformat-gfm==0.3.6",
    # Pre-commit stuff
    "pre-commit==3.6.1",
    # Misc.
    "check-manifest==0.49",
]

doc = [
    "sphinx==7.2.6",
    "sphinx_rtd_theme==2.0.0",
    "myst-parser==2.0.0",
    "sphinx-copybutton==0.5.1",
    "sphinxcontrib-bibtex==2.6.2",
    "sphinxcontrib-mermaid==0.8.1",
    "sphinx-gallery==0.15.0",
    "importlib-metadata==6.0.0; python_version < '3.10'",
]

test = [
    "pytest==8.0.1",
    "pytest-datafiles==3.0.0",
    "pytest-randomly==3.15.0",
    "coverage[toml]==7.3.3; python_version < '3.11'",
    "coverage==7.4.1; python_version >= '3.11'",
    "pytest-cov==4.1.0",
]

[project.scripts]
resonaate = "resonaate:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.dynamic]
readme = { file = "README.md" }

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
minversion = "6.0"
# Nice summary at end, & make output "quiet"
addopts = "-ra -q --cov-report=html --cov-report=xml --cov-report=term:skip-covered --cov-context=test --cov-branch"
testpaths = ["tests"]

[tool.black]
# Line length recommendation
line-length = 99
# Python versions to target
target-version = ["py39", "py310", "py311"]

[tool.isort]
# Play nicely with black
profile = "black"
# Specific directory includes
src_paths = ["src", "tests", "setup.py"]
# Add to skip list
extend_skip = [
    ".dat",
    ".md",
    ".json",
    ".rst",
    ".txt",
    ".yaml",
    ".yml",
    "coverage*",
    ".gitlab/",
    ".vscode/",
    ".mypy_cache/",
    ".pytest_cache/",
    "__pycache__/",
    ".coverage*",
    "configs/",
    "coverage/",
    "db/",
    "debugging/",
    "plots/",
    "build/",
    "dist/",
    "docs/",
]
# Use .gitingore to skip files
skip_gitignore = true
# git_ignore = true
# Line length rules
line_length = 99
# Enforce Unix line endings
line_ending = "\n"
# Whitelist first party imports
known_first_party = ["resonaate", "respect"]
# Import headers
import_heading_stdlib = "Standard Library Imports"
import_heading_thirdparty = "Third Party Imports"
import_heading_firstparty = "RESONAATE Imports"
import_heading_localfolder = "Local Imports"

[tool.coverage.paths]
# Required for proper coverage testing across multiple jobs
source = ["src", "**/site-packages"]

[tool.coverage.run]
source = ["resonaate"]
parallel = true
omit = ["tests/**", "docs/**"]
concurrency = ["thread", "multiprocessing"]

[tool.coverage.report]
exclude_lines = [
    # Have to re-enable the standard pragma:
    "pragma: no cover",

    # Don't complain if tests don't hit defensive assertion code:
    "raise NotImplementedError",
    "except KeyboardInterrupt",

    # Don't complain about missing debug-only code:
    "def __repr__",

    # Don't complain if non-runnable code isn't run:
    "if __name__ == .__main__.:",

    # Don't complain for type-checking guard:
    "if TYPE_CHECKING:",
]

precision = 2

[tool.coverage.html]
directory = "coverage"
show_contexts = true
